// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Contexts;

#nullable disable

namespace WEB.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WEB.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "English"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Spanish"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Polish"
                        });
                });

            modelBuilder.Entity("WEB.Models.Record", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ExecutionTime")
                        .HasColumnType("bigint");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TaskId");

                    b.ToTable("Record");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2018, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExecutionTime = 10L,
                            LanguageId = 1,
                            StudentId = 1,
                            TaskId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2019, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExecutionTime = 5L,
                            LanguageId = 2,
                            StudentId = 2,
                            TaskId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExecutionTime = 1L,
                            LanguageId = 3,
                            StudentId = 3,
                            TaskId = 3
                        });
                });

            modelBuilder.Entity("WEB.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john@example.com",
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            Email = "michael@example.com",
                            FirstName = "Michael",
                            LastName = "Myers"
                        },
                        new
                        {
                            Id = 3,
                            Email = "jordan@example.com",
                            FirstName = "Jordan",
                            LastName = "Carter"
                        });
                });

            modelBuilder.Entity("WEB.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Task");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Solve this problem using Dijkstra algorithm.",
                            Name = "Dijkstra"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Solve this problem using DFS algorithm.",
                            Name = "DFS"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Solve this problem using BFS algorithm.",
                            Name = "BFS"
                        });
                });

            modelBuilder.Entity("WEB.Models.Record", b =>
                {
                    b.HasOne("WEB.Models.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WEB.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WEB.Models.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Student");

                    b.Navigation("Task");
                });
#pragma warning restore 612, 618
        }
    }
}
